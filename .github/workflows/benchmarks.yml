name: Performance Benchmarks

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run benchmarks daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      save_baseline:
        description: 'Save results as new baseline'
        required: false
        type: boolean
        default: false

jobs:
  benchmark:
    name: Run Performance Benchmarks
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        # Need full history for baseline comparisons
        fetch-depth: 0
    
    - name: Setup Swift
      uses: swift-actions/setup-swift@v2.3.0
      with:
        swift-version: '5.10'
    
    - name: Cache Swift packages
      uses: actions/cache@v3
      with:
        path: |
          .build
          ~/Library/Developer/Xcode/DerivedData
        key: ${{ runner.os }}-swift-${{ hashFiles('Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-swift-
    
    - name: Build benchmarks
      run: swift build --product PipelineKitBenchmarks -c release
    
    # Baseline functionality not yet implemented in benchmark executable
    
    - name: Run benchmarks (quick mode for PRs)
      if: github.event_name == 'pull_request'
      run: |
        .build/release/PipelineKitBenchmarks --quick > benchmark-output.txt 2>&1 || true
        cat benchmark-output.txt
    
    - name: Run benchmarks (full mode for main)
      if: github.event_name != 'pull_request'
      run: |
        .build/release/PipelineKitBenchmarks > benchmark-output.txt 2>&1 || true
        cat benchmark-output.txt
    
    # Baseline functionality not yet implemented in benchmark executable
    
    - name: Comment PR with results
      if: github.event_name == 'pull_request' && failure()
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const output = fs.readFileSync('benchmark-output.txt', 'utf8');
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## ⚠️ Performance Regression Detected\n\n\`\`\`\n${output}\n\`\`\`\n\nPlease review the performance impact of your changes.`
          });
    
    - name: Upload results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: benchmark-results-${{ github.sha }}
        path: |
          benchmark-output.txt
        retention-days: 90

  benchmark-linux:
    name: Run Performance Benchmarks (Linux)
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    # Ubuntu has Swift pre-installed in runner
    
    - name: Build benchmarks
      run: swift build --product PipelineKitBenchmarks -c release
    
    - name: Run benchmarks (smoke test)
      run: |
        .build/release/PipelineKitBenchmarks CommandContext