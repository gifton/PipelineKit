name: Release

on:
  push:
    tags:
      - 'v*'

env:
  SWIFT_VERSION: '5.10'

jobs:
  validate-tag:
    name: Validate Tag
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
    - uses: actions/checkout@v4
    
    - name: Get version from tag
      id: get_version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
    - name: Validate semantic version
      run: |
        VERSION=${{ steps.get_version.outputs.version }}
        if ! [[ "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9\.]+)?(\+[a-zA-Z0-9\.]+)?$ ]]; then
          echo "Invalid semantic version: $VERSION"
          exit 1
        fi

  build-and-test:
    name: Build and Test
    needs: validate-tag
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-14, macos-13]
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Swift
      uses: swift-actions/setup-swift@v2
      with:
        swift-version: ${{ env.SWIFT_VERSION }}
    
    - name: Build
      run: swift build -c release -v
      
    - name: Test
      run: swift test -v
      
    - name: Archive build
      if: matrix.os == 'macos-14'
      run: |
        swift build -c release --arch arm64 --arch x86_64
        tar -czf PipelineKit-${{ needs.validate-tag.outputs.version }}-macos.tar.gz -C .build/release PipelineKit
        
    - name: Upload artifacts
      if: matrix.os == 'macos-14'
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: PipelineKit-*.tar.gz

  create-release:
    name: Create Release
    needs: [validate-tag, build-and-test]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
    
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-artifacts
        
    - name: Extract changelog
      id: changelog
      run: |
        VERSION=${{ needs.validate-tag.outputs.version }}
        CHANGELOG=$(sed -n "/## \[$VERSION\]/,/## \[/p" CHANGELOG.md | sed '$ d')
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        echo "$CHANGELOG" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        name: v${{ needs.validate-tag.outputs.version }}
        body: ${{ steps.changelog.outputs.changelog }}
        draft: false
        prerelease: ${{ contains(needs.validate-tag.outputs.version, '-') }}
        files: |
          PipelineKit-*.tar.gz
          
    - name: Update Package Index
      run: |
        echo "Package index update would happen here for package registries"

  publish-docs:
    name: Publish Documentation
    needs: create-release
    runs-on: macos-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Swift
      uses: swift-actions/setup-swift@v2
      with:
        swift-version: ${{ env.SWIFT_VERSION }}
        
    - name: Build documentation
      run: |
        swift package generate-documentation \
          --target PipelineKit \
          --output-path ./docs-output \
          --hosting-base-path PipelineKit
          
    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v2
      with:
        path: ./docs-output
        
    - name: Deploy to GitHub Pages
      uses: actions/deploy-pages@v2