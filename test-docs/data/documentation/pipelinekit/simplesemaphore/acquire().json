{"metadata":{"externalID":"s:11PipelineKit15SimpleSemaphoreC7acquireAA0D5TokenCyYaKF","title":"acquire()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"acquire","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:11PipelineKit14SemaphoreTokenC","text":"SemaphoreToken","kind":"typeIdentifier"}],"modules":[{"name":"PipelineKit"}],"roleHeading":"Instance Method","role":"symbol","symbolKind":"method"},"hierarchy":{"paths":[["doc:\/\/PipelineKit\/documentation\/PipelineKit","doc:\/\/PipelineKit\/documentation\/PipelineKit\/SimpleSemaphore"]]},"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","abstract":[{"text":"Acquires a permit, waiting if necessary.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"acquire"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"identifier":"doc:\/\/PipelineKit\/documentation\/PipelineKit\/SemaphoreToken","preciseIdentifier":"s:11PipelineKit14SemaphoreTokenC","kind":"typeIdentifier","text":"SemaphoreToken"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A token representing the acquired permit."}]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"This method suspends until a permit is available. The returned token","type":"text"},{"text":" ","type":"text"},{"text":"automatically releases the permit when deallocated.","type":"text"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"FIFO ordering is not guaranteed. Tasks may be resumed in any order"},{"type":"text","text":" "},{"type":"text","text":"when permits become available. For strict FIFO ordering, use"},{"type":"text","text":" "},{"type":"text","text":"BackPressureAsyncSemaphore from PipelineKitResilience."}]}],"name":"Note","type":"aside","style":"note"},{"content":[{"inlineContent":[{"text":"","type":"text"},{"code":"CancellationError","type":"codeVoice"},{"text":" if the task is cancelled while waiting.","type":"text"}],"type":"paragraph"}],"name":"Throws","type":"aside","style":"note"}]}],"identifier":{"url":"doc:\/\/PipelineKit\/documentation\/PipelineKit\/SimpleSemaphore\/acquire()","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/pipelinekit\/simplesemaphore\/acquire()"]}],"references":{"doc://PipelineKit/documentation/PipelineKit/SimpleSemaphore/acquire()":{"type":"topic","title":"acquire()","abstract":[{"text":"Acquires a permit, waiting if necessary.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"acquire","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"SemaphoreToken","kind":"typeIdentifier","preciseIdentifier":"s:11PipelineKit14SemaphoreTokenC"}],"url":"\/documentation\/pipelinekit\/simplesemaphore\/acquire()","identifier":"doc:\/\/PipelineKit\/documentation\/PipelineKit\/SimpleSemaphore\/acquire()","kind":"symbol","role":"symbol"},"doc://PipelineKit/documentation/PipelineKit/SimpleSemaphore":{"type":"topic","identifier":"doc:\/\/PipelineKit\/documentation\/PipelineKit\/SimpleSemaphore","navigatorTitle":[{"kind":"identifier","text":"SimpleSemaphore"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"SimpleSemaphore"}],"url":"\/documentation\/pipelinekit\/simplesemaphore","abstract":[{"type":"text","text":"A minimal async semaphore implementation for basic concurrency control."}],"title":"SimpleSemaphore"},"doc://PipelineKit/documentation/PipelineKit":{"role":"collection","identifier":"doc:\/\/PipelineKit\/documentation\/PipelineKit","title":"PipelineKit","url":"\/documentation\/pipelinekit","abstract":[],"type":"topic","kind":"symbol"},"doc://PipelineKit/documentation/PipelineKit/SemaphoreToken":{"type":"topic","url":"\/documentation\/pipelinekit\/semaphoretoken","title":"SemaphoreToken","role":"symbol","navigatorTitle":[{"text":"SemaphoreToken","kind":"identifier"}],"identifier":"doc:\/\/PipelineKit\/documentation\/PipelineKit\/SemaphoreToken","abstract":[{"type":"text","text":"A token representing an acquired semaphore resource that automatically releases on cleanup."}],"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SemaphoreToken","kind":"identifier"}]}}}