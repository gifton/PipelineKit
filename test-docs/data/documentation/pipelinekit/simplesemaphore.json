{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SimpleSemaphore","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"SimpleSemaphore provides the essential semaphore functionality without","type":"text"},{"text":" ","type":"text"},{"text":"the complexity of memory tracking, priorities, or advanced back-pressure","type":"text"},{"text":" ","type":"text"},{"text":"strategies. For advanced features, use BackPressureAsyncSemaphore from","type":"text"},{"text":" ","type":"text"},{"text":"the PipelineKitResilience module.","type":"text"}]},{"level":2,"type":"heading","anchor":"Example","text":"Example"},{"type":"codeListing","code":["let semaphore = SimpleSemaphore(permits: 3)","let token = await semaphore.acquire()","\/\/ Use resource...","token.release() \/\/ Or let it auto-release"],"syntax":"swift"}]}],"topicSections":[{"identifiers":["doc:\/\/PipelineKit\/documentation\/PipelineKit\/SimpleSemaphore\/init(permits:)"],"title":"Initializers","generated":true,"anchor":"Initializers"},{"identifiers":["doc:\/\/PipelineKit\/documentation\/PipelineKit\/SimpleSemaphore\/availablePermits","doc:\/\/PipelineKit\/documentation\/PipelineKit\/SimpleSemaphore\/waitingCount"],"title":"Instance Properties","generated":true,"anchor":"Instance-Properties"},{"identifiers":["doc:\/\/PipelineKit\/documentation\/PipelineKit\/SimpleSemaphore\/acquire()","doc:\/\/PipelineKit\/documentation\/PipelineKit\/SimpleSemaphore\/tryAcquire()"],"title":"Instance Methods","generated":true,"anchor":"Instance-Methods"},{"identifiers":["doc:\/\/PipelineKit\/documentation\/PipelineKit\/SimpleSemaphore\/Actor-Implementations"],"title":"Default Implementations","generated":true,"anchor":"Default-Implementations"}],"hierarchy":{"paths":[["doc:\/\/PipelineKit\/documentation\/PipelineKit"]]},"abstract":[{"type":"text","text":"A minimal async semaphore implementation for basic concurrency control."}],"kind":"symbol","sections":[],"variants":[{"paths":["\/documentation\/pipelinekit\/simplesemaphore"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/PipelineKit\/documentation\/PipelineKit\/SimpleSemaphore","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"SimpleSemaphore"}],"title":"SimpleSemaphore","externalID":"s:11PipelineKit15SimpleSemaphoreC","navigatorTitle":[{"kind":"identifier","text":"SimpleSemaphore"}],"modules":[{"name":"PipelineKit"}],"roleHeading":"Class","symbolKind":"class"},"relationshipsSections":[{"identifiers":["doc:\/\/PipelineKit\/s8SendableP","doc:\/\/PipelineKit\/ScA"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"references":{"doc://PipelineKit/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/PipelineKit\/s8SendableP","type":"unresolvable"},"doc://PipelineKit/documentation/PipelineKit/SimpleSemaphore/waitingCount":{"role":"symbol","title":"waitingCount","abstract":[{"text":"Gets the current number of waiting tasks.","type":"text"}],"identifier":"doc:\/\/PipelineKit\/documentation\/PipelineKit\/SimpleSemaphore\/waitingCount","type":"topic","kind":"symbol","url":"\/documentation\/pipelinekit\/simplesemaphore\/waitingcount","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"waitingCount","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}]},"doc://PipelineKit/documentation/PipelineKit/SimpleSemaphore/Actor-Implementations":{"kind":"article","identifier":"doc:\/\/PipelineKit\/documentation\/PipelineKit\/SimpleSemaphore\/Actor-Implementations","abstract":[],"type":"topic","title":"Actor Implementations","role":"collectionGroup","url":"\/documentation\/pipelinekit\/simplesemaphore\/actor-implementations"},"doc://PipelineKit/documentation/PipelineKit/SimpleSemaphore/acquire()":{"type":"topic","title":"acquire()","abstract":[{"text":"Acquires a permit, waiting if necessary.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"acquire","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"SemaphoreToken","kind":"typeIdentifier","preciseIdentifier":"s:11PipelineKit14SemaphoreTokenC"}],"url":"\/documentation\/pipelinekit\/simplesemaphore\/acquire()","identifier":"doc:\/\/PipelineKit\/documentation\/PipelineKit\/SimpleSemaphore\/acquire()","kind":"symbol","role":"symbol"},"doc://PipelineKit/documentation/PipelineKit":{"role":"collection","identifier":"doc:\/\/PipelineKit\/documentation\/PipelineKit","title":"PipelineKit","url":"\/documentation\/pipelinekit","abstract":[],"type":"topic","kind":"symbol"},"doc://PipelineKit/documentation/PipelineKit/SimpleSemaphore/tryAcquire()":{"url":"\/documentation\/pipelinekit\/simplesemaphore\/tryacquire()","type":"topic","abstract":[{"text":"Attempts to acquire a permit without waiting.","type":"text"}],"role":"symbol","kind":"symbol","title":"tryAcquire()","identifier":"doc:\/\/PipelineKit\/documentation\/PipelineKit\/SimpleSemaphore\/tryAcquire()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"tryAcquire","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"SemaphoreToken","kind":"typeIdentifier","preciseIdentifier":"s:11PipelineKit14SemaphoreTokenC"},{"text":"?","kind":"text"}]},"doc://PipelineKit/documentation/PipelineKit/SimpleSemaphore/init(permits:)":{"title":"init(permits:)","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"permits","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":")","kind":"text"}],"role":"symbol","abstract":[{"type":"text","text":"Creates a simple semaphore with the specified number of permits."}],"type":"topic","identifier":"doc:\/\/PipelineKit\/documentation\/PipelineKit\/SimpleSemaphore\/init(permits:)","url":"\/documentation\/pipelinekit\/simplesemaphore\/init(permits:)"},"doc://PipelineKit/documentation/PipelineKit/SimpleSemaphore/availablePermits":{"title":"availablePermits","identifier":"doc:\/\/PipelineKit\/documentation\/PipelineKit\/SimpleSemaphore\/availablePermits","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"availablePermits"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Gets the current number of available permits."}],"type":"topic","url":"\/documentation\/pipelinekit\/simplesemaphore\/availablepermits","role":"symbol"},"doc://PipelineKit/documentation/PipelineKit/SimpleSemaphore":{"type":"topic","identifier":"doc:\/\/PipelineKit\/documentation\/PipelineKit\/SimpleSemaphore","navigatorTitle":[{"kind":"identifier","text":"SimpleSemaphore"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"SimpleSemaphore"}],"url":"\/documentation\/pipelinekit\/simplesemaphore","abstract":[{"type":"text","text":"A minimal async semaphore implementation for basic concurrency control."}],"title":"SimpleSemaphore"},"doc://PipelineKit/ScA":{"identifier":"doc:\/\/PipelineKit\/ScA","title":"_Concurrency.Actor","type":"unresolvable"}}}